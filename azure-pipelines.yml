trigger: none

pool: "Infra-Runners-pool"   # General pool for pipeline

variables:
  imageName: 'loveable-image-grabber'
  dockerHubNamespace: 'prmd77'
  dockerHubPassword: $(DockerHubSecrets)
  dockerTag: 'latest'

stages:

# STAGE 1: BUILD

- stage: build

  displayName: "Build Stage One"
  jobs:
    - job: BuildJob
      displayName: "Install and Build"
      pool:  # Specify agent with demand at job level
        name: "Infra-Runners-pool"
        demands:
          - agent.name -equals kmaster
      steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '18.x'
          displayName: "Install Node.js"

        - script: |
            npm install
            npm run build
          displayName: "Install Dependencies and Build"

# STAGE 2: Dockerize and Push

- stage: Dockerize

  displayName: "Docker Build and Push"
  dependsOn: build
  jobs:
    - job: DockerJob
      displayName: "Build Docker Image & Push to Docker Hub"
      pool:  # Again, specify agent with demand here too
        name: "Infra-Runners-pool"
        demands:
          - agent.name -equals kmaster
      steps:
        - task: Docker@2
          displayName: "Build and Push Docker Image"
          inputs:
            containerRegistry: 'DockerHubConnection'
            repository: '$(dockerHubNamespace)/$(imageName)'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'
            buildContext: '$(Build.SourcesDirectory)'
            tags: |
              $(dockerTag)

# STAGE 3: Deploy to AKS 

- stage: DeployToAKS
  displayName: Deploy To AKS
  dependsOn: Dockerize
  jobs:
   - job: Deploy
     displayName: Deploy To AKS
     pool: 
       name: "Infra-Runners-pool"
       demanands:
        - agent.name -equals kmster
     
     steps:
       - task: KubernetesManifest@1
         inputs:
           action: 'deploy'
           connectionType: 'kubernetesServiceConnection'
           kubernetesServiceConnection: 'kube-service-connection'
           namespace: 'default'
           manifests: 'loveable-image-grabber/manifests/deployment.yaml'
    

